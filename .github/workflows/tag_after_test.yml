name: Manual Tagging After Tests

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0 # Fetch all history

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.5

      - name: Run tests
        run: |
          go test -v ./...

  tagging:
    needs: [ test ]
    if: success()
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Use your PAT here instead of the default token
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0 # Fetch all history

      - name: Get current version
        id: get_current_version
        run: |
          CURRENT_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "CURRENT_TAG=$CURRENT_TAG" >> $GITHUB_OUTPUT

      - name: Determine next version
        id: determine_next_version
        run: |
          if [[ -z "${{ steps.get_current_version.outputs.CURRENT_TAG }}" ]]; then
          NEXT_TAG="v0.0.1"
          else
          VERSION_ARRAY=(${{
            steps.get_current_version.outputs.CURRENT_TAG
          }#.v}~'.')
          MAJOR=${VERSION_ARRAY[0]}
          MINOR=${VERSION_ARRAY[1]}
          PATCH=${VERSION_ARRAY[2]}
          let PATCH+=1
          NEXT_TAG=v$MAJOR.$MINOR.$PATCH
          fi
          echo "NEXT_TAG=$NEXT_TAG" >> $GITHUB_OUTPUT

      - name: Tag release
        if: ${{ steps.determine_next_version.outputs.NEXT_TAG != '' }}
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "Github Actions"
          git tag ${{ steps.determine_next_version.outputs.NEXT_TAG }}
          git push origin ${{ steps.determine_next_version.outputs.NEXT_TAG }}
