syntax = "proto3";
package pagination;

option go_package = "github.com/origadmin/toolkits/pagination;pagination";

import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";
import "errors/rpcerr/rpcerr.proto";

// Paging sort
enum SortOrder {
  // No sort
  UNSORTED = 0;
  // Ascending order
  ASCENDING = 1;
  // Descending order
  DESCENDING = 2;
}




// Paging general request
message PagingRequest {
  // Query parameters
  message QueryParam {
    repeated string values = 1;
  }

  // Current page
  optional int32 current = 1;

  // The number of lines per page
  optional int32 page_size = 2;

  // Query parameter
  map<string, google.protobuf.ListValue> query = 3;

  // Sort
  map<string, SortOrder> order_by = 4;

  // Whether not paging
  optional bool no_paging = 5;
}

// Paging general result
message PagingResponse {
  message PagingData {
    // Total number of records
    int32 total = 1;
    // Current page
    int32 current = 2;
    // The number of lines per page
    int32 page_size = 3;
    // Response data
    google.protobuf.Any data = 4;
  }

  bool success = 1;
  int32 total = 2;
  PagingData data = 3;
  errors.rpcerr.Error error = 4;
  google.protobuf.Any extra = 5;
}