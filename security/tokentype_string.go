// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package security

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AnonymousToken-0]
	_ = x[BasicToken-1]
	_ = x[BearerToken-2]
	_ = x[DigestToken-3]
	_ = x[DPoPToken-4]
	_ = x[GNAPToken-5]
	_ = x[HOBAToken-6]
	_ = x[MutualToken-7]
	_ = x[NegotiateToken-8]
	_ = x[NTLMToken-9]
	_ = x[OAuthToken-10]
	_ = x[PrivateTokenToken-11]
	_ = x[AWS4HMACSHA256Token-12]
	_ = x[SCRAMToken-13]
	_ = x[SCRAMSHA1Token-14]
	_ = x[SCRAMSHA256Token-15]
	_ = x[VAPIDToken-16]
	_ = x[InvalidToken-17]
	_ = x[maxTokenType-18]
}

const _TokenType_name = "AnonymousTokenBasicTokenBearerTokenDigestTokenDPoPTokenGNAPTokenHOBATokenMutualTokenNegotiateTokenNTLMTokenOAuthTokenPrivateTokenTokenAWS4HMACSHA256TokenSCRAMTokenSCRAMSHA1TokenSCRAMSHA256TokenVAPIDTokenInvalidTokenmaxTokenType"

var _TokenType_index = [...]uint8{0, 14, 24, 35, 46, 55, 64, 73, 84, 98, 107, 117, 134, 153, 163, 177, 193, 203, 215, 227}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
